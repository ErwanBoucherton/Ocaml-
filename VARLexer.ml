# 1 "VARLexer.mll"
 

  open Lexing
  open VARParser

  let keyword_or_label =
    let h = Hashtbl.create 17 in
    List.iter (fun (s, k) -> Hashtbl.add h s k)
      [ "nop",    NOP;
        "print",  PRINT;
        "exit",   EXIT;
        "if",     IF;
        "else",   ELSE;
        "while",  WHILE;
        "var",    VAR;
        "return", RETURN;
        "true",   BOOL true;
        "false",  BOOL false;
      ] ;
    fun s ->
      try  Hashtbl.find h s
      with Not_found -> LABEL(s)
        

# 27 "VARLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\228\255\229\255\230\255\231\255\232\255\233\255\002\000\
    \001\000\002\000\003\000\004\000\005\000\243\255\244\255\245\255\
    \246\255\247\255\006\000\249\255\250\255\079\000\020\000\001\000\
    \014\000\255\255\253\255\002\000\248\255\242\255\241\255\239\255\
    \237\255\235\255\234\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\026\000\
    \026\000\017\000\015\000\019\000\026\000\255\255\255\255\255\255\
    \255\255\255\255\026\000\255\255\255\255\004\000\003\000\026\000\
    \001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\255\255\255\255\027\000\
    \255\255\000\000\000\000\027\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\025\000\026\000\026\000\024\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\000\
    \000\000\000\000\000\000\024\000\000\000\000\000\000\000\000\000\
    \024\000\011\000\000\000\023\000\000\000\013\000\008\000\033\000\
    \006\000\005\000\015\000\017\000\019\000\016\000\024\000\014\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\018\000\020\000\010\000\012\000\009\000\032\000\
    \031\000\030\000\029\000\028\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\
    \000\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\004\000\007\000\003\000\034\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\000\000\000\000\000\000\000\000\021\000\000\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\023\000\027\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\024\000\
    \255\255\255\255\255\255\024\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\000\000\000\000\008\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\009\000\
    \010\000\011\000\012\000\018\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\007\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\255\255\255\255\255\255\255\255\021\000\255\255\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\023\000\027\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 33 "VARLexer.mll"
      ( new_line lexbuf; token lexbuf )
# 156 "VARLexer.ml"

  | 1 ->
# 35 "VARLexer.mll"
      ( token lexbuf )
# 161 "VARLexer.ml"

  | 2 ->
# 37 "VARLexer.mll"
      ( new_line lexbuf; token lexbuf )
# 166 "VARLexer.ml"

  | 3 ->
let
# 39 "VARLexer.mll"
              n
# 172 "VARLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 40 "VARLexer.mll"
      ( INT (int_of_string n) )
# 176 "VARLexer.ml"

  | 4 ->
let
# 41 "VARLexer.mll"
             lab
# 182 "VARLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 42 "VARLexer.mll"
      ( keyword_or_label lab )
# 186 "VARLexer.ml"

  | 5 ->
# 45 "VARLexer.mll"
      ( SEMI )
# 191 "VARLexer.ml"

  | 6 ->
# 47 "VARLexer.mll"
      ( COMMA )
# 196 "VARLexer.ml"

  | 7 ->
# 49 "VARLexer.mll"
      ( SET )
# 201 "VARLexer.ml"

  | 8 ->
# 51 "VARLexer.mll"
      ( PLUS )
# 206 "VARLexer.ml"

  | 9 ->
# 53 "VARLexer.mll"
      ( MINUS )
# 211 "VARLexer.ml"

  | 10 ->
# 55 "VARLexer.mll"
      ( STAR )
# 216 "VARLexer.ml"

  | 11 ->
# 57 "VARLexer.mll"
      ( SLASH )
# 221 "VARLexer.ml"

  | 12 ->
# 59 "VARLexer.mll"
      ( PRCT )
# 226 "VARLexer.ml"

  | 13 ->
# 61 "VARLexer.mll"
      ( EQ )
# 231 "VARLexer.ml"

  | 14 ->
# 63 "VARLexer.mll"
      ( NEQ )
# 236 "VARLexer.ml"

  | 15 ->
# 65 "VARLexer.mll"
      ( LT )
# 241 "VARLexer.ml"

  | 16 ->
# 67 "VARLexer.mll"
      ( LE )
# 246 "VARLexer.ml"

  | 17 ->
# 69 "VARLexer.mll"
      ( GT )
# 251 "VARLexer.ml"

  | 18 ->
# 71 "VARLexer.mll"
      ( GE )
# 256 "VARLexer.ml"

  | 19 ->
# 73 "VARLexer.mll"
      ( NOT )
# 261 "VARLexer.ml"

  | 20 ->
# 75 "VARLexer.mll"
      ( AND )
# 266 "VARLexer.ml"

  | 21 ->
# 77 "VARLexer.mll"
      ( OR )
# 271 "VARLexer.ml"

  | 22 ->
# 79 "VARLexer.mll"
      ( LP )
# 276 "VARLexer.ml"

  | 23 ->
# 81 "VARLexer.mll"
      ( RP )
# 281 "VARLexer.ml"

  | 24 ->
# 83 "VARLexer.mll"
      ( BEGIN )
# 286 "VARLexer.ml"

  | 25 ->
# 85 "VARLexer.mll"
      ( END )
# 291 "VARLexer.ml"

  | 26 ->
# 87 "VARLexer.mll"
      ( failwith ("Unknown character : " ^ (lexeme lexbuf)) )
# 296 "VARLexer.ml"

  | 27 ->
# 89 "VARLexer.mll"
      ( EOF )
# 301 "VARLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

